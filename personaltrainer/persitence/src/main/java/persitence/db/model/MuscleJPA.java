package persitence.db.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Muscle generated by hbm2java.
 */
@Entity
@Table(name = "muscle", catalog = "personalTrainer", uniqueConstraints = {})

public class MuscleJPA extends AuditableEntity implements Serializable {

	// Fields

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 3300738142899323909L;

	/** The id muscle. */
	@Id
	@Column(name = "ID_MUSCLE", unique = true, nullable = false, insertable = true, updatable = true)
	private Integer idMuscle;

	/** The name. */
	@Column(name = "NAME", length = 100)
	private String name;

	/** The exercise muscles. */
	@OneToMany(cascade = { CascadeType.ALL }, mappedBy = "muscle")
	private Set<ExerciseMuscle> exerciseMuscles = new HashSet<>(0);

	/**
	 * Gets the id muscle.
	 *
	 * @return the id muscle
	 */
	public Integer getIdMuscle() {
		return idMuscle;
	}

	/**
	 * Sets the id muscle.
	 *
	 * @param idMuscle
	 *            the new id muscle
	 */
	public void setIdMuscle(final Integer idMuscle) {
		this.idMuscle = idMuscle;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name
	 *            the new name
	 */
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * Gets the exercise muscles.
	 *
	 * @return the exercise muscles
	 */
	public Set<ExerciseMuscle> getExerciseMuscles() {
		return exerciseMuscles;
	}

	/**
	 * Sets the exercise muscles.
	 *
	 * @param exerciseMuscles
	 *            the new exercise muscles
	 */
	public void setExerciseMuscles(final Set<ExerciseMuscle> exerciseMuscles) {
		this.exerciseMuscles = exerciseMuscles;
	}

	// Property accessors

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(idMuscle);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == idMuscle || null == ((MuscleJPA) obj).getIdMuscle()) {
			return false;
		}
		return Objects.equals(idMuscle, ((MuscleJPA) obj).getIdMuscle());
	}

}
