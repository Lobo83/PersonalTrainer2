package persitence.db.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Rutine generated by hbm2java.
 */
@Entity
@Table(name = "rutine", catalog = "personalTrainer", uniqueConstraints = {})

public class Rutine extends AuditableEntity implements Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -9108998474480071945L;

	/** The id rutine. */
	// Fields
	@Id
	@Column(name = "ID_RUTINE", unique = true, nullable = false, insertable = true, updatable = true)

	private Integer idRutine;

	/** The user data. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)

	@JoinColumn(name = "ID_USER_DATA", unique = false, nullable = false, insertable = true, updatable = true)

	private UserData userData;

	/** The name. */
	@Column(name = "NAME", unique = false, nullable = false, insertable = true, updatable = true, length = 50)

	private String name;

	/** The description. */
	@Column(name = "DESCRIPTION", unique = false, nullable = true, insertable = true, updatable = true, length = 100)
	private String description;

	/** The exercise rutines. */
	@OneToMany(cascade = { CascadeType.ALL }, mappedBy = "rutine")
	private Set<ExerciseRutine> exerciseRutines = new HashSet<>(0);

	/** The exercise rutine historics. */
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "rutine")
	private Set<ExerciseRutineHistoric> exerciseRutineHistorics = new HashSet<>(0);

	/**
	 * Gets the id rutine.
	 *
	 * @return the id rutine
	 */
	public Integer getIdRutine() {
		return idRutine;
	}

	/**
	 * Sets the id rutine.
	 *
	 * @param idRutine
	 *            the new id rutine
	 */
	public void setIdRutine(final Integer idRutine) {
		this.idRutine = idRutine;
	}

	/**
	 * Gets the user data.
	 *
	 * @return the user data
	 */
	public UserData getUserData() {
		return userData;
	}

	/**
	 * Sets the user data.
	 *
	 * @param userData
	 *            the new user data
	 */
	public void setUserData(final UserData userData) {
		this.userData = userData;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name
	 *            the new name
	 */
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description
	 *            the new description
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

	/**
	 * Gets the exercise rutines.
	 *
	 * @return the exercise rutines
	 */
	public Set<ExerciseRutine> getExerciseRutines() {
		return exerciseRutines;
	}

	/**
	 * Sets the exercise rutines.
	 *
	 * @param exerciseRutines
	 *            the new exercise rutines
	 */
	public void setExerciseRutines(final Set<ExerciseRutine> exerciseRutines) {
		this.exerciseRutines = exerciseRutines;
	}

	/**
	 * Gets the exercise rutine historics.
	 *
	 * @return the exercise rutine historics
	 */
	public Set<ExerciseRutineHistoric> getExerciseRutineHistorics() {
		return exerciseRutineHistorics;
	}

	/**
	 * Sets the exercise rutine historics.
	 *
	 * @param exerciseRutineHistorics
	 *            the new exercise rutine historics
	 */
	public void setExerciseRutineHistorics(final Set<ExerciseRutineHistoric> exerciseRutineHistorics) {
		this.exerciseRutineHistorics = exerciseRutineHistorics;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(idRutine);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == idRutine || null == ((Rutine) obj).getIdRutine()) {
			return false;
		}
		return Objects.equals(idRutine, ((Rutine) obj).getIdRutine());
	}

}
