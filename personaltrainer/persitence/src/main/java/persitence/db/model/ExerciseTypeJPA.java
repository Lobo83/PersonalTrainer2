package persitence.db.model;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ExerciseType generated by hbm2java.
 */
@Entity
@Table(name = "exercise_type", catalog = "personalTrainer", uniqueConstraints = {})

public class ExerciseTypeJPA extends AuditableEntityJPA implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -6975875235354669181L;
	// Fields

	/** The cod exercise type. */
	// Property accessors
	@Id
	@Column(name = "COD_EXERCISE_TYPE", unique = true, nullable = false, insertable = true, updatable = true, length = 10)
	private String codExerciseType;

	/** The name type. */
	@Column(name = "NAME_TYPE", length = 45)
	private String nameType;

	/** The description. */
	@Column(name = "DESCRIPTION", length = 100)
	private String description;

	/** The exercises. */
	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "exerciseType")
	private Set<ExerciseJPA> exercises = new HashSet<>(0);

	/**
	 * Gets the cod exercise type.
	 *
	 * @return the cod exercise type
	 */
	public String getCodExerciseType() {
		return codExerciseType;
	}

	/**
	 * Sets the cod exercise type.
	 *
	 * @param codExerciseType
	 *            the new cod exercise type
	 */
	public void setCodExerciseType(final String codExerciseType) {
		this.codExerciseType = codExerciseType;
	}

	/**
	 * Gets the name type.
	 *
	 * @return the name type
	 */
	public String getNameType() {
		return nameType;
	}

	/**
	 * Sets the name type.
	 *
	 * @param nameType
	 *            the new name type
	 */
	public void setNameType(final String nameType) {
		this.nameType = nameType;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description
	 *            the new description
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

	/**
	 * Gets the exercises.
	 *
	 * @return the exercises
	 */
	public Set<ExerciseJPA> getExercises() {
		return exercises;
	}

	/**
	 * Sets the exercises.
	 *
	 * @param exercises
	 *            the new exercises
	 */
	public void setExercises(final Set<ExerciseJPA> exercises) {
		this.exercises = exercises;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(codExerciseType);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == codExerciseType || null == ((ExerciseTypeJPA) obj).getCodExerciseType()) {
			return false;
		}
		return Objects.equals(codExerciseType, ((ExerciseTypeJPA) obj).getCodExerciseType());
	}

}
