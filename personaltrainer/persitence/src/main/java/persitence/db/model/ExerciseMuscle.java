package persitence.db.model;

import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ExerciseMuscle generated by hbm2java.
 */
@Entity
@Table(name = "exercise_muscle", catalog = "personalTrainer", uniqueConstraints = {})

public class ExerciseMuscle extends AuditableEntity implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 2137392001476052528L;

	/** The id exercise muscle. */
	// Fields
	@Id
	@Column(name = "ID_EXERCISE_MUSCLE", unique = true, nullable = false, insertable = true, updatable = true)
	private Integer idExerciseMuscle;

	/** The muscle. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_MUSCLE", unique = false, nullable = false, insertable = true, updatable = true)
	private MuscleJPA muscle;

	/** The exercise. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EXERCISE", unique = false, nullable = false, insertable = true, updatable = true)
	private Exercise exercise;

	/** The ind principal. */
	@Column(name = "IND_PRINCIPAL", unique = false, nullable = false, insertable = true, updatable = true)
	private Boolean indPrincipal;

	// Constructors

	/**
	 * Gets the id exercise muscle.
	 *
	 * @return the id exercise muscle
	 */
	public Integer getIdExerciseMuscle() {
		return idExerciseMuscle;
	}

	/**
	 * Sets the id exercise muscle.
	 *
	 * @param idExerciseMuscle
	 *            the new id exercise muscle
	 */
	public void setIdExerciseMuscle(final Integer idExerciseMuscle) {
		this.idExerciseMuscle = idExerciseMuscle;
	}

	/**
	 * Gets the muscle.
	 *
	 * @return the muscle
	 */
	public MuscleJPA getMuscle() {
		return muscle;
	}

	/**
	 * Sets the muscle.
	 *
	 * @param muscle
	 *            the new muscle
	 */
	public void setMuscle(final MuscleJPA muscle) {
		this.muscle = muscle;
	}

	/**
	 * Gets the exercise.
	 *
	 * @return the exercise
	 */
	public Exercise getExercise() {
		return exercise;
	}

	/**
	 * Sets the exercise.
	 *
	 * @param exercise
	 *            the new exercise
	 */
	public void setExercise(final Exercise exercise) {
		this.exercise = exercise;
	}

	/**
	 * Checks if is ind principal.
	 *
	 * @return true, if is ind principal
	 */
	public boolean isIndPrincipal() {
		return indPrincipal;
	}

	/**
	 * Sets the ind principal.
	 *
	 * @param indPrincipal
	 *            the new ind principal
	 */
	public void setIndPrincipal(final Boolean indPrincipal) {
		this.indPrincipal = indPrincipal;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(idExerciseMuscle);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == idExerciseMuscle || null == ((ExerciseMuscle) obj).getIdExerciseMuscle()) {
			return false;
		}
		return Objects.equals(idExerciseMuscle, ((ExerciseMuscle) obj).getIdExerciseMuscle());
	}
}
