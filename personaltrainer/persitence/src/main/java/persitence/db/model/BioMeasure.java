package persitence.db.model;

import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * BioMeasure generated by hbm2java.
 */
@Entity
@Table(name = "bio_measure", catalog = "personalTrainer", uniqueConstraints = {})
public class BioMeasure extends AuditableEntity implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 8369779953024777994L;

	// Fields
	@Id
	@Column(name = "COD_MEASURE", length = 10)
	/** The cod measure. */
	private String codMeasure;

	/** The formula. */
	@Column(name = "FORMULA", length = 500)
	private String formula;

	/** The name. */
	@Column(name = "NAME", length = 45)
	private String name;

	/** The description. */
	@Column(name = "DESCRIPTION", length = 500)
	private String description;

	// Constructors

	/**
	 * Gets the cod measure.
	 *
	 * @return the cod measure
	 */
	// Property accessors

	public String getCodMeasure() {
		return codMeasure;
	}

	/**
	 * Sets the cod measure.
	 *
	 * @param codMeasure
	 *            the new cod measure
	 */
	public void setCodMeasure(final String codMeasure) {
		this.codMeasure = codMeasure;
	}

	/**
	 * Gets the formula.
	 *
	 * @return the formula
	 */

	public String getFormula() {
		return formula;
	}

	/**
	 * Sets the formula.
	 *
	 * @param formula
	 *            the new formula
	 */
	public void setFormula(final String formula) {
		this.formula = formula;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name
	 *            the new name
	 */
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */

	public String getDescription() {
		return description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description
	 *            the new description
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(codMeasure);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == codMeasure || null == ((BioMeasure) obj).getCodMeasure()) {
			return false;
		}
		return Objects.equals(codMeasure, ((BioMeasure) obj).getCodMeasure());
	}
}
