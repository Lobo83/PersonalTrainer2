package persitence.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ExerciseRutineHistoric generated by hbm2java.
 */
@Entity
@Table(name = "exercise_rutine_historic", catalog = "personalTrainer", uniqueConstraints = {})

public class ExerciseRutineHistoricJPA extends AuditableEntityJPA implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = -546452010109972344L;

	/** The id exercise rutine historic. */
	@Id
	@Column(name = "ID_EXERCISE_RUTINE_HISTORIC", unique = true, nullable = false, insertable = true, updatable = true)
	private Integer idExerciseRutineHistoric;

	/** The exercise rutine. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EXERCISE_RUTINE", unique = false, nullable = false, insertable = true, updatable = true)
	private ExerciseRutineJPA exerciseRutine;

	/** The rutine. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_RUTINE", unique = false, nullable = false, insertable = true, updatable = true)
	private RutineJPA rutine;

	/** The exercise measure. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "COD_EXERCISE_MEASURE_TYPE", unique = false, nullable = false, insertable = true, updatable = true)
	private ExerciseMeasureJPA exerciseMeasure;

	/** The exercise. */
	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_EXERCISE", unique = false, nullable = false, insertable = true, updatable = true)
	private ExerciseJPA exercise;

	/** The series number. */
	@Column(name = "SERIES_NUMBER")
	private Integer seriesNumber;

	/** The duration. */
	@Column(name = "DURATION")
	private Integer duration;

	/** The weight. */
	@Column(name = "WEIGHT", unique = false, nullable = true, insertable = true, updatable = true, precision = 10)
	private BigDecimal weight;

	/** The change date. */
	@Column(name = "CHANGE_DATE", unique = false, nullable = false, insertable = true, updatable = true, length = 19)
	private LocalDate changeDate;

	/**
	 * Gets the id exercise rutine historic.
	 *
	 * @return the id exercise rutine historic
	 */
	public Integer getIdExerciseRutineHistoric() {
		return idExerciseRutineHistoric;
	}

	/**
	 * Sets the id exercise rutine historic.
	 *
	 * @param idExerciseRutineHistoric
	 *            the new id exercise rutine historic
	 */
	public void setIdExerciseRutineHistoric(final Integer idExerciseRutineHistoric) {
		this.idExerciseRutineHistoric = idExerciseRutineHistoric;
	}

	/**
	 * Gets the exercise rutine.
	 *
	 * @return the exercise rutine
	 */
	public ExerciseRutineJPA getExerciseRutine() {
		return exerciseRutine;
	}

	/**
	 * Sets the exercise rutine.
	 *
	 * @param exerciseRutine
	 *            the new exercise rutine
	 */
	public void setExerciseRutine(final ExerciseRutineJPA exerciseRutine) {
		this.exerciseRutine = exerciseRutine;
	}

	/**
	 * Gets the rutine.
	 *
	 * @return the rutine
	 */
	public RutineJPA getRutine() {
		return rutine;
	}

	/**
	 * Sets the rutine.
	 *
	 * @param rutine
	 *            the new rutine
	 */
	public void setRutine(final RutineJPA rutine) {
		this.rutine = rutine;
	}

	/**
	 * Gets the exercise measure.
	 *
	 * @return the exercise measure
	 */
	public ExerciseMeasureJPA getExerciseMeasure() {
		return exerciseMeasure;
	}

	/**
	 * Sets the exercise measure.
	 *
	 * @param exerciseMeasure
	 *            the new exercise measure
	 */
	public void setExerciseMeasure(final ExerciseMeasureJPA exerciseMeasure) {
		this.exerciseMeasure = exerciseMeasure;
	}

	/**
	 * Gets the exercise.
	 *
	 * @return the exercise
	 */
	public ExerciseJPA getExercise() {
		return exercise;
	}

	/**
	 * Sets the exercise.
	 *
	 * @param exercise
	 *            the new exercise
	 */
	public void setExercise(final ExerciseJPA exercise) {
		this.exercise = exercise;
	}

	/**
	 * Gets the series number.
	 *
	 * @return the series number
	 */
	public Integer getSeriesNumber() {
		return seriesNumber;
	}

	/**
	 * Sets the series number.
	 *
	 * @param seriesNumber
	 *            the new series number
	 */
	public void setSeriesNumber(final Integer seriesNumber) {
		this.seriesNumber = seriesNumber;
	}

	/**
	 * Gets the duration.
	 *
	 * @return the duration
	 */
	public Integer getDuration() {
		return duration;
	}

	/**
	 * Sets the duration.
	 *
	 * @param duration
	 *            the new duration
	 */
	public void setDuration(final Integer duration) {
		this.duration = duration;
	}

	/**
	 * Gets the weight.
	 *
	 * @return the weight
	 */
	public BigDecimal getWeight() {
		return weight;
	}

	/**
	 * Sets the weight.
	 *
	 * @param weight
	 *            the new weight
	 */
	public void setWeight(final BigDecimal weight) {
		this.weight = weight;
	}

	/**
	 * Gets the change date.
	 *
	 * @return the change date
	 */
	public LocalDate getChangeDate() {
		return changeDate;
	}

	/**
	 * Sets the change date.
	 *
	 * @param changeDate
	 *            the new change date
	 */
	public void setChangeDate(final LocalDate changeDate) {
		this.changeDate = changeDate;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {

		return Objects.hash(idExerciseRutineHistoric);
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (null == idExerciseRutineHistoric || null == ((ExerciseRutineHistoricJPA) obj).getIdExerciseRutineHistoric()) {
			return false;
		}
		return Objects.equals(idExerciseRutineHistoric, ((ExerciseRutineHistoricJPA) obj).getIdExerciseRutineHistoric());
	}

}
